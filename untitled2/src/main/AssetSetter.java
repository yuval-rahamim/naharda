package main;

import entity.NPC;
import monster.MON_Slime;
import object.*;
import tile_interactive.IT_tree;

public class AssetSetter {
    GamePanel gp;
    public  int mapNum =0;
    public AssetSetter(GamePanel gp){
        this.gp = gp;
    }
    public void setObject(){
        int i = 0;
        gp.obj[mapNum][i] = new OBJ_Key(gp);
        gp.obj[mapNum][i].WorldX = 23*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 7*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Key(gp);
        gp.obj[mapNum][i].WorldX = 23*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 40*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Key(gp);
        gp.obj[mapNum][i].WorldX = 38*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 8*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Door(gp);
        gp.obj[mapNum][i].WorldX = 10*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 11*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Door(gp);
        gp.obj[mapNum][i].WorldX = 8*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 28*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Door(gp);
        gp.obj[mapNum][i].WorldX = 12*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 22*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].WorldX = 10*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 7*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].WorldX = 13*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 41*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Boots(gp);
        gp.obj[mapNum][i].WorldX = 20*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 21*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_Axe(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*33;
        gp.obj[mapNum][i].WorldY = gp.tileSize*21;
        i++;
        gp.obj[mapNum][i] = new OBJ_Shield_Blue(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*30;
        gp.obj[mapNum][i].WorldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*33;
        gp.obj[mapNum][i].WorldY = gp.tileSize*7;
        i++;
        gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*13;
        gp.obj[mapNum][i].WorldY = gp.tileSize*39;
        i++;
        gp.obj[mapNum][i] = new OBJ_Coin_Bronze(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*36;
        gp.obj[mapNum][i].WorldY = gp.tileSize*30;
        i++;
        gp.obj[mapNum][i] = new OBJ_green_gem(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*34;
        gp.obj[mapNum][i].WorldY = gp.tileSize*26;
        i++;
        gp.obj[mapNum][i] = new OBJ_ManaCrystal(gp);
        gp.obj[mapNum][i].WorldX = gp.tileSize*30;
        gp.obj[mapNum][i].WorldY = gp.tileSize*40;
        i++;
        setGrass(i);
    }
    public void setGrass(int i){
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 21*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 20*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 22*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 21*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 19*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 22*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 19*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 22*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 18*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_red_flower(gp);
        gp.obj[mapNum][i].WorldX = 26*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_red_flower(gp);
        gp.obj[mapNum][i].WorldX = 24*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 25*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 20*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 24*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 19*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 25*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 19*gp.tileSize;
        i++;
        gp.obj[mapNum][i] = new OBJ_grass(gp);
        gp.obj[mapNum][i].WorldX = 24*gp.tileSize;
        gp.obj[mapNum][i].WorldY = 18*gp.tileSize;
        i++;

    }
    public void setNPC(){
        int i = 0;
        gp.npc[mapNum][i] = new NPC(gp);
        gp.npc[mapNum][i].WorldX = gp.tileSize*21;
        gp.npc[mapNum][i].WorldY = gp.tileSize*21;
        i++;
        gp.npc[mapNum][i] = new NPC(gp);
        gp.npc[mapNum][i].WorldX = gp.tileSize*10;
        gp.npc[mapNum][i].WorldY = gp.tileSize*10;
    }
    public void setMonster(){
        int i = 0;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*22;
        gp.monster[mapNum][i].WorldY = gp.tileSize*20;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*23;
        gp.monster[mapNum][i].WorldY = gp.tileSize*9;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*22;
        gp.monster[mapNum][i].WorldY = gp.tileSize*40;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*21;
        gp.monster[mapNum][i].WorldY = gp.tileSize*39;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*23;
        gp.monster[mapNum][i].WorldY = gp.tileSize*42;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*20;
        gp.monster[mapNum][i].WorldY = gp.tileSize*41;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*24;
        gp.monster[mapNum][i].WorldY = gp.tileSize*40;
        i++;
        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*22;
        gp.monster[mapNum][i].WorldY = gp.tileSize*38;
        i++;

        gp.monster[mapNum][i] = new MON_Slime(gp);
        gp.monster[mapNum][i].WorldX = gp.tileSize*8;
        gp.monster[mapNum][i].WorldY = gp.tileSize*33;
        i++;

    }
    public void setInteractiveTiles()
    {
        int i = 0;
        gp.iTile[mapNum][i] = new IT_tree(gp,27,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,28,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,29,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,30,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,31,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,32,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,33,8);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,23,17);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,23,10);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,23,25);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,19,21);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,28,22);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,28,23);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,28,24);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,27,24);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,27,25);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,27,26);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,27,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,28,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,29,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,30,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,34,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,35,27);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,9,35);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,9,36);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,9,37);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,9,38);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,9,39);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,10,39);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,11,39);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,12,39);
        i++;
        gp.iTile[mapNum][i] = new IT_tree(gp,13,40);
        i++;
    }
}
